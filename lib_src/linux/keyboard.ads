package Keyboard is -- linux
   pragma Elaborate_Body;

   Keyboard_Error : exception;

   type Key_Code is private;

   --  Key codes for a standard US QWERTY keyboard

   Escape            : constant Key_Code;
   One               : constant Key_Code;
   Two               : constant Key_Code;
   Three             : constant Key_Code;
   Four              : constant Key_Code;
   Five              : constant Key_Code;
   Six               : constant Key_Code;
   Seven             : constant Key_Code;
   Eight             : constant Key_Code;
   Nine              : constant Key_Code;
   Zero              : constant Key_Code;
   Minus             : constant Key_Code;
   Equal             : constant Key_Code;
   Delete            : constant Key_Code;
   Tab               : constant Key_Code;
   Q                 : constant Key_Code;
   W                 : constant Key_Code;
   E                 : constant Key_Code;
   R                 : constant Key_Code;
   T                 : constant Key_Code;
   Y                 : constant Key_Code;
   U                 : constant Key_Code;
   I                 : constant Key_Code;
   O                 : constant Key_Code;
   P                 : constant Key_Code;
   Left_Bracket      : constant Key_Code;
   Right_Bracket     : constant Key_Code;
   Return_Key        : constant Key_Code;
   Left_Control      : constant Key_Code;
   A                 : constant Key_Code;
   S                 : constant Key_Code;
   D                 : constant Key_Code;
   F                 : constant Key_Code;
   G                 : constant Key_Code;
   H                 : constant Key_Code;
   J                 : constant Key_Code;
   K                 : constant Key_Code;
   L                 : constant Key_Code;
   Semicolon         : constant Key_Code;
   Apostrophe        : constant Key_Code;
   Grave             : constant Key_Code;
   Left_Shift        : constant Key_Code;
   Backslash         : constant Key_Code;
   Z                 : constant Key_Code;
   X                 : constant Key_Code;
   C                 : constant Key_Code;
   V                 : constant Key_Code;
   B                 : constant Key_Code;
   N                 : constant Key_Code;
   M                 : constant Key_Code;
   Comma             : constant Key_Code;
   Period            : constant Key_Code;
   Slash             : constant Key_Code;
   Right_Shift       : constant Key_Code;
   KP_Multiply       : constant Key_Code;
   Alt               : constant Key_Code;
   Space             : constant Key_Code;
   Caps_Lock         : constant Key_Code;
   F1                : constant Key_Code;
   F2                : constant Key_Code;
   F3                : constant Key_Code;
   F4                : constant Key_Code;
   F5                : constant Key_Code;
   F6                : constant Key_Code;
   F7                : constant Key_Code;
   F8                : constant Key_Code;
   F9                : constant Key_Code;
   F10               : constant Key_Code;
   Num_Lock          : constant Key_Code;
   Scroll_Lock       : constant Key_Code;
   KP_7              : constant Key_Code;
   KP_8              : constant Key_Code;
   KP_9              : constant Key_Code;
   KP_Subtract       : constant Key_Code;
   KP_4              : constant Key_Code;
   KP_5              : constant Key_Code;
   KP_6              : constant Key_Code;
   KP_Add            : constant Key_Code;
   KP_1              : constant Key_Code;
   KP_2              : constant Key_Code;
   KP_3              : constant Key_Code;
   KP_0              : constant Key_Code;
   KP_Period         : constant Key_Code;
   Last_Console      : constant Key_Code;
   Less              : constant Key_Code;
   F11               : constant Key_Code;
   F12               : constant Key_Code;
   KP_Enter          : constant Key_Code;
   Right_Control     : constant Key_Code;
   KP_Divide         : constant Key_Code;
   Control_Backslash : constant Key_Code;
   AltGr             : constant Key_Code;
   Break             : constant Key_Code;
   Find              : constant Key_Code;
   Up                : constant Key_Code;
   Prior             : constant Key_Code;
   Left              : constant Key_Code;
   Right             : constant Key_Code;
   Select_Key        : constant Key_Code;
   Down              : constant Key_Code;
   Next              : constant Key_Code;
   Insert            : constant Key_Code;
   Remove            : constant Key_Code;

   function Is_Pressed (Key : Key_Code) return Boolean;
   pragma Inline (Is_Pressed);

   --  The routines in this package put the keyboard in an unusual state.
   --  You MUST call Return_To_Normal_State before reading the keyboard
   --  using some other method such as via Text_IO.
   procedure Return_To_Normal_State;
   pragma Inline (Return_To_Normal_State);

   --  Checks for keyboard events.  You must call this from time to time.
   procedure Update;
   pragma Inline (Update);

   --  Returns True if the key state changed to being pressed
   function Was_Struck (Key : Key_Code) return Boolean;
   pragma Inline (Was_Struck);
private
   type Key_Code is range 0 .. 127;
   Escape            : constant Key_Code := 1;
   One               : constant Key_Code := 2;
   Two               : constant Key_Code := 3;
   Three             : constant Key_Code := 4;
   Four              : constant Key_Code := 5;
   Five              : constant Key_Code := 6;
   Six               : constant Key_Code := 7;
   Seven             : constant Key_Code := 8;
   Eight             : constant Key_Code := 9;
   Nine              : constant Key_Code := 10;
   Zero              : constant Key_Code := 11;
   Minus             : constant Key_Code := 12;
   Equal             : constant Key_Code := 13;
   Delete            : constant Key_Code := 14;
   Tab               : constant Key_Code := 15;
   Q                 : constant Key_Code := 16;
   W                 : constant Key_Code := 17;
   E                 : constant Key_Code := 18;
   R                 : constant Key_Code := 19;
   T                 : constant Key_Code := 20;
   Y                 : constant Key_Code := 21;
   U                 : constant Key_Code := 22;
   I                 : constant Key_Code := 23;
   O                 : constant Key_Code := 24;
   P                 : constant Key_Code := 25;
   Left_Bracket      : constant Key_Code := 26;
   Right_Bracket     : constant Key_Code := 27;
   Return_Key        : constant Key_Code := 28;
   Left_Control      : constant Key_Code := 29;
   A                 : constant Key_Code := 30;
   S                 : constant Key_Code := 31;
   D                 : constant Key_Code := 32;
   F                 : constant Key_Code := 33;
   G                 : constant Key_Code := 34;
   H                 : constant Key_Code := 35;
   J                 : constant Key_Code := 36;
   K                 : constant Key_Code := 37;
   L                 : constant Key_Code := 38;
   Semicolon         : constant Key_Code := 39;
   Apostrophe        : constant Key_Code := 40;
   Grave             : constant Key_Code := 41;
   Left_Shift        : constant Key_Code := 42;
   Backslash         : constant Key_Code := 43;
   Z                 : constant Key_Code := 44;
   X                 : constant Key_Code := 45;
   C                 : constant Key_Code := 46;
   V                 : constant Key_Code := 47;
   B                 : constant Key_Code := 48;
   N                 : constant Key_Code := 49;
   M                 : constant Key_Code := 50;
   Comma             : constant Key_Code := 51;
   Period            : constant Key_Code := 52;
   Slash             : constant Key_Code := 53;
   Right_Shift       : constant Key_Code := 54;
   KP_Multiply       : constant Key_Code := 55;
   Alt               : constant Key_Code := 56;
   Space             : constant Key_Code := 57;
   Caps_Lock         : constant Key_Code := 58;
   F1                : constant Key_Code := 59;
   F2                : constant Key_Code := 60;
   F3                : constant Key_Code := 61;
   F4                : constant Key_Code := 62;
   F5                : constant Key_Code := 63;
   F6                : constant Key_Code := 64;
   F7                : constant Key_Code := 65;
   F8                : constant Key_Code := 66;
   F9                : constant Key_Code := 67;
   F10               : constant Key_Code := 68;
   Num_Lock          : constant Key_Code := 69;
   Scroll_Lock       : constant Key_Code := 70;
   KP_7              : constant Key_Code := 71;
   KP_8              : constant Key_Code := 72;
   KP_9              : constant Key_Code := 73;
   KP_Subtract       : constant Key_Code := 74;
   KP_4              : constant Key_Code := 75;
   KP_5              : constant Key_Code := 76;
   KP_6              : constant Key_Code := 77;
   KP_Add            : constant Key_Code := 78;
   KP_1              : constant Key_Code := 79;
   KP_2              : constant Key_Code := 80;
   KP_3              : constant Key_Code := 81;
   KP_0              : constant Key_Code := 82;
   KP_Period         : constant Key_Code := 83;
   Last_Console      : constant Key_Code := 84;
   Less              : constant Key_Code := 86;
   F11               : constant Key_Code := 87;
   F12               : constant Key_Code := 88;
   KP_Enter          : constant Key_Code := 96;
   Right_Control     : constant Key_Code := 97;
   KP_Divide         : constant Key_Code := 98;
   Control_Backslash : constant Key_Code := 99;
   AltGr             : constant Key_Code := 100;
   Break             : constant Key_Code := 101;
   Find              : constant Key_Code := 102;
   Up                : constant Key_Code := 103;
   Prior             : constant Key_Code := 104;
   Left              : constant Key_Code := 105;
   Right             : constant Key_Code := 106;
   Select_Key        : constant Key_Code := 107;
   Down              : constant Key_Code := 108;
   Next              : constant Key_Code := 109;
   Insert            : constant Key_Code := 110;
   Remove            : constant Key_Code := 111;
end Keyboard;
